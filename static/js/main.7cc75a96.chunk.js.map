{"version":3,"sources":["component/footer/footer.js","component/Todo App/TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","href","target","rel","Component","TodoApp","state","input","items","message","temp","keyref","addDisp","editDisp","textDec","preventRefresh","event","preventDefault","timer","setTimeout","setState","handleChange","value","storeItems","messageTemp","val","status","deleteItem","key","filter","data","index","editItem","updateItem","complete","tempAarray","map","saveTodo","localStorage","setItem","JSON","stringify","getTodo","getItem","todos","parse","this","onSubmit","type","onChange","placeholder","onClick","style","display","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7cc75a96.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./footer.css\";\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <h3>\n                    Developed By <span>Muhammad Semeer</span>\n                    <br/>\n                    <a\n                        href=\"https://github.com/muhammadsemeer/React-Todo-App\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        <i className=\"fab fa-github\"></i>\n                    </a>\n                    &nbsp;\n                    <a\n                        href=\"https://www.instagram.com/dream_dev_/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        <i className=\"fab fa-instagram\"></i>\n                    </a>\n                </h3>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport \"./todoapp.css\";\n\nexport default class TodoApp extends Component {\n    state = {\n        input: \"\",\n        items: [],\n        message: \"\",\n        temp: \"\",\n        keyref: \"\",\n        addDisp: \"block\",\n        editDisp: \"none\",\n        textDec: \"none\",\n    };\n\n    componentDidMount() {\n        this.getTodo();\n    }\n    componentDidUpdate() {\n        this.saveTodo();\n    }\n\n    preventRefresh = (event) => {\n        event.preventDefault();\n    };\n    timer = () => {\n        setTimeout(() => {\n            this.setState({\n                message: \"\",\n            });\n        }, 2000);\n    };\n    handleChange = (event) => {\n        this.setState({\n            input: event.target.value,\n        });\n    };\n    storeItems = () => {\n        const { input } = this.state;\n        if (input === \"\") {\n            this.setState({\n                message: \"Enter Something to Add\",\n            });\n            this.timer();\n        } else {\n            var messageTemp = input + \" Added to list\";\n            this.setState({\n                message: messageTemp,\n                items: [\n                    ...this.state.items,\n                    { val: input, status: \"notcompleted\" },\n                ],\n                input: \"\",\n            });\n            this.timer();\n        }\n    };\n\n    deleteItem = (key) => {\n        const { items } = this.state;\n        var messageTemp = items[key].val + \" deleted from list\";\n        this.setState({\n            message: messageTemp,\n            items: this.state.items.filter((data, index) => index !== key),\n        });\n        this.timer();\n    };\n\n    editItem = (key) => {\n        const { items } = this.state;\n        this.setState({\n            input: items[key].val,\n            keyref: key,\n            addDisp: \"none\",\n            editDisp: \"block\",\n        });\n    };\n\n    updateItem = () => {\n        var { items, input, keyref } = this.state;\n        var temp = items;\n        if (input !== \"\") {\n            var messageTemp = items[keyref].val + \" is edited to \" + input;\n            temp[keyref].val = input;\n            this.setState({\n                message: messageTemp,\n                items: temp,\n                input: \"\",\n                keyref: \"\",\n                editDisp: \"none\",\n                addDisp: \"block\",\n            });\n            this.timer();\n        } else {\n            this.setState({\n                message: \"Items Can't Empty\",\n            });\n            this.timer();\n        }\n    };\n    complete = (key) => {\n        const { items } = this.state;\n        let tempAarray = items;\n        tempAarray.map((data, index) => {\n            if (key === index) {\n                if (tempAarray[key].status === \"notcompleted\") {\n                    tempAarray[key].status = \"completed\";\n                    var messageTemp = tempAarray[key].val + \" Completed\";\n                    this.setState({\n                        items: tempAarray,\n                        message: messageTemp,\n                    });\n                    this.timer();\n                } else {\n                    tempAarray[key].status = \"notcompleted\";\n                    messageTemp = tempAarray[key].val + \"  uncompleted\";\n                    this.setState({\n                        items: tempAarray,\n                        message: messageTemp,\n                    });\n                    this.timer();\n                }\n            }\n\n            return items;\n        });\n    };\n    saveTodo = () => {\n        const { items } = this.state;\n        localStorage.setItem(\"todo\", JSON.stringify(items));\n    };\n    getTodo = () => {\n        if (localStorage.getItem(\"todo\") === null) {\n            localStorage.setItem(\"todo\", JSON.stringify([]));\n        } else {\n            const todos = JSON.parse(localStorage.getItem(\"todo\"));\n            this.setState({ items: todos });\n        }\n    };\n    render() {\n        const { input, items, message, addDisp, editDisp } = this.state;\n        return (\n            <div className=\"todo-container\">\n                <form className=\"input-form\" onSubmit={this.preventRefresh}>\n                    <h1>Todo App</h1>\n                    <p>{message}</p>\n                    <div className=\"input-section\">\n                        <input\n                            type=\"text\"\n                            value={input}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter Items\"\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={this.storeItems}\n                            style={{ display: addDisp }}\n                        >\n                            <i className=\"fas fa-plus\"></i>\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={this.updateItem}\n                            style={{ display: editDisp }}\n                        >\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </form>\n                <div className=\"todo-items\">\n                    <ul>\n                        {items.map((data, index) => (\n                            <li key={index}>\n                                <i\n                                    className=\"fas fa-check-square\"\n                                    onClick={() => this.complete(index)}\n                                ></i>\n                                <span className={data.status}>{data.val}</span>\n                                <i\n                                    className=\"fas fa-pencil-alt\"\n                                    onClick={() => this.editItem(index)}\n                                ></i>\n                                <i\n                                    className=\"fas fa-trash-alt\"\n                                    onClick={() => this.deleteItem(index)}\n                                ></i>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Footer from \"./component/footer/footer\";\nimport TodoApp from \"./component/Todo App/TodoApp\";\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <TodoApp />\n                <Footer />\n            </>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\nserviceWorker.register();\n"],"sourceRoot":""}